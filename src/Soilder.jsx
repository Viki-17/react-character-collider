/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useKeyboardControls } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { RigidBody } from "@react-three/rapier";
import { KinematicCharacterController } from "@dimforge/rapier3d-compat";

export default function Soilder(props) {
  const group = useRef();
  const body = useRef();
  const { nodes, materials, animations } = useGLTF("src/assets/Soldier.glb");
  const { actions } = useAnimations(animations, group);

  const [, get] = useKeyboardControls();
  const { forward, backward, left, right, jump, shift } = get();

  const currentAction = useRef("");

  useFrame((state, delta) => {
    const { forward, backward, left, right, jump, shift } = get();
    let action = "";
    if (forward || backward || left || right) {
      action = "Walk";
      if (shift) {
        action = "Run";
      }
    } else {
      action = "Idle";
    }

    if (currentAction.current != action) {
      const nextActionToPlay = actions[action];
      const current = actions[currentAction.current];
      current?.fadeOut(0.2);
      nextActionToPlay?.reset().fadeIn(0.2).play();
      currentAction.current = action;
    }

    const impulse = { x: 0, y: 0, z: 0 };

    const impulseStrength = 1 * delta;
    if (forward) {
      impulse.z -= impulseStrength;
    }

    body.current.applyImpulse(impulse);
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Character" rotation={[-Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <RigidBody ref={body} colliders="trimesh">
            <skinnedMesh
              name="vanguard_Mesh"
              geometry={nodes.vanguard_Mesh.geometry}
              material={materials.VanguardBodyMat}
              skeleton={nodes.vanguard_Mesh.skeleton}
            />
            <skinnedMesh
              name="vanguard_visor"
              geometry={nodes.vanguard_visor.geometry}
              material={materials.Vanguard_VisorMat}
              skeleton={nodes.vanguard_visor.skeleton}
            />
          </RigidBody>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("src/assets/Soldier.glb");
